{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","App","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","ReactDOM","render","document","getElementById"],"mappings":"qy8IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QChBIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAAS,EAChBD,EAASE,KAAI,SAAAT,GAAO,OAClB,qBAAKI,UAAU,cAAf,SACE,cAAC,EAAD,CAAaJ,QAASA,GAAcA,EAAQU,SAG9C,mBAAG,UAAQ,oBAAX,+BCROC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtBA,EAAKX,KACH,mBAAGG,UAAU,WAAWC,KAAI,iBAAYO,EAAKV,OAA7C,SACGU,EAAKX,OAEL,WCJMY,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAAgCD,EAAhCC,MAAOZ,EAAyBW,EAAzBX,KAAMS,EAAmBE,EAAnBF,KAAML,EAAaO,EAAbP,SAE3B,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,cAED,cAAC,EAAD,CAAUH,KAAMA,GAAWA,EAAKF,UAIpC,mBAAGN,UAAU,iBAAb,SACGD,IAGH,uBAEA,cAAC,EAAD,CAAaI,SAAUA,QCtBhBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,U,qBCY/B,IAAMQ,EAAM,WACjB,IAAMD,EAAQE,EAAgBV,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MAbiBQ,EAaCN,EAAKM,OAZlBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MACzC,MAYLb,UATqBgB,EASKT,EAAKJ,GAR1Bc,EAAmBC,QAAO,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,MACxD,QAFT,IAAyBA,EALJH,KAiBnB,OACE,0BAAShB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCxBvBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e1797194.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  comments.length > 0 ? (\n    comments.map(comment => (\n      <div className=\"CommentList\">\n        <CommentInfo comment={comment} key={comment.id} />\n      </div>\n    ))) : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n  )\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  user.name ? (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  ) : ('Anonym')\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const { title, body, user, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by '}\n\n          <UserInfo user={user} key={user.id} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      <CommentList comments={comments} />\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n      || null;\n}\n\nexport const App = () => {\n  const posts = postsFromServer.map(post => ({\n    ...post,\n    user: getUserById(post.userId),\n    comments: getCommentsById(post.id),\n  }));\n\n  return (\n    <section className=\"App\">\n      <h1 className=\"App__title\">Static list of posts</h1>\n\n      <PostList posts={posts} />\n    </section>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}